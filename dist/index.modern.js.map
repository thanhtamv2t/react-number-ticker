{"version":3,"file":"index.modern.js","sources":["../src/components/TickerNumber.tsx","../src/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useSpring, animated } from 'react-spring'\n\ninterface TickerProps {\n  num: string | number\n  index: number\n}\n\nconst TickerNumber = ({ num, index }: TickerProps) => {\n  const [ticker, setTicker] = useState<string | number>(0)\n  const [height, setHeight] = useState<number | null>(0)\n  const heightRef = useRef<HTMLDivElement>(null)\n  const arrNumber: number[] = useMemo(() => {\n    return [...Array(10).fill(1)].map((_it, index) => index)\n  }, [])\n\n  const props = useSpring({\n    transform: `translateY(-${Number(ticker) * 10}%)`,\n    delay: index * 100\n  })\n\n  useEffect(() => {\n    if (height) {\n      setTicker(num)\n    } else if (heightRef.current) {\n      setHeight(heightRef.current.clientHeight)\n    }\n  }, [heightRef, height, num])\n  return (\n    <div\n      className='ticker-container'\n      style={{ overflow: 'hidden', width: '100%', height: height || undefined }}\n    >\n      {!height ? (\n        <div className='num' ref={heightRef}>\n          -\n        </div>\n      ) : (\n        <animated.div style={props}>\n          {arrNumber.map((it) => (\n            <div className='num' key={Math.random()}>\n              {it}\n            </div>\n          ))}\n        </animated.div>\n      )}\n    </div>\n  )\n}\n\nexport default TickerNumber\n","import * as React from 'react'\nimport TickerNumber from './components/TickerNumber'\nimport styles from './styles.module.css'\n\ninterface ReactNumberTickerProps {\n  number?: string | number\n  className?: string\n}\n\nconst ReactNumberTicker = ({ number, className }: ReactNumberTickerProps) => {\n  if (!number) return null\n\n  const stringifyNumber = number?.toString()\n\n  const splitText = stringifyNumber.split('')\n\n  const containerClassName: string = [className, styles.reactNumberTicker]\n    .filter((it) => it)\n    .join(' ')\n\n  return (\n    <div className={containerClassName}>\n      {splitText.map((it, index) => {\n        const castItem = Number(it)\n        if (isNaN(castItem)) {\n          return <React.Fragment key={`text-${index}`}>{it}</React.Fragment>\n        }\n\n        return (\n          <TickerNumber\n            key={`text-${index}-time`}\n            num={parseInt(it)}\n            index={index}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ReactNumberTicker\n"],"names":["TickerNumber","num","index","useState","ticker","setTicker","height","setHeight","heightRef","useRef","arrNumber","useMemo","Array","fill","map","_it","props","useSpring","transform","Number","delay","useEffect","current","clientHeight","React","className","style","overflow","width","undefined","ref","animated","div","it","key","Math","random","ReactNumberTicker","number","stringifyNumber","toString","splitText","split","containerClassName","styles","reactNumberTicker","filter","join","castItem","isNaN","parseInt"],"mappings":"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"}